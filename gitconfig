[user]
	name = Kaustubh Atrawalkar
	email = katrawalkar@mz.com
[color]
	ui = true
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
[color "status"]
	added = yellow
	changed = green
	untracked = cyan
[advice]
	pushNonFastForward = false
	statusHints = false
[core]
	whitespace = trailing-space,space-before-tab
	excludesfile = /Users/katrawalkar/.gitignore_global
	editor = vim
	pager = less -Xr
[diff]
	renames = copies
	mnemonicprefix = false
	tool = bc3
	guitool = bc3
[branch]
	autosetupmerge = true
	autosetuprebase = always
[push]
	default = upstream
[rerere]
	enabled = true
[merge]
	stat = true
	tool = bc3
	defaulttoupstream = true
	renamelimit = 1814
[difftool]
	prompt = false
[apply]
	whitespace = warn
[alias]
	# git add
    a = add
	aa = add --all
	ae = add --edit
	ai = add --interactive
	ap = add --patch
	au = add --update

    # git commit
	c = commit
	ca = commit --amend
    amend = commit --amend -C HEAD
	cm = commit --message
	msg = commit --allow-empty -m

    # git branch
    b = branch -vv
	create-branch = !sh -c 'git push origin HEAD:refs/heads/$1 && git fetch origin && git branch --track $1 origin/$1 && cd . && git checkout $1' -
	current-branch = rev-parse --abbrev-ref HEAD
	delete-branch = !sh -c 'git push origin :refs/heads/$1 && git remote prune origin && git branch -D $1' -

    # git diff
	changes = diff --name-status -r
	check = diff --check
	d = diff --ignore-all-space
	dc = diff --cached --ignore-all-space
	wd = diff --word-diff="color"
	wdc = diff --word-diff="color" --cached

    # git checkout
    co = checkout

    # git cherry-pick
	p = cherry-pick

    # git rebase
    irb = rebase --interactive
	rb = rebase
	rba = rebase --abort
	rbc = rebase --continue
	rbs = rebase --skip

    # git stash
	stl = stash list
	stp = stash pop

	# git merge
	m = merge -s recursive -X patience
	mm = merge --no-ff
	merge-branch = !git checkout master && git merge @{-1}
	conflicted = grep --name-only --full-name '<<<<<<< HEAD'
	# Pick our version of a file while merging
	ours = "!f() { git co --ours $@ && git add $@; }; f"
	# Pick their version of a file while merging
	theirs = "!f() { git co --theirs $@ && git add $@; }; f"

    # git submodule
    sm = submodule
	sma = submodule add
	smu = submodule update --init

    # misc
    div = divergence
	dt = difftool
	h = help
	authors = "!git log --pretty=format:%aN | sort | uniq -c | sort -rn"
    list-aliases = "!git config -l | grep alias | cut -c 7-"
	la = "!git list-aliases"
	ls-ignored = ls-files --exclude-standard --ignored --others
	markdown = !BN=$(git name-rev --name-only HEAD) && git log --no-merges --grep=$BN --pretty=oneline | awk -F"$BN: " '{print \"-\", $NF}' | uniq
	# Create an empty commit, only having a commit message
	pr = !hub pull-request
	prune-remotes = "!for remote in `git remote`; do git remote prune $remote; done"
	r = remote
	rh = reset --hard
	ru = remote update --prune
    st = status
	s = status --short --branch

    undo = reset --soft HEAD@{1}
	push = push --tags

	# Inspect history in various ways
	news = log -p HEAD@{1}..HEAD@{0}
	sl = shortlog
	# Show compact history
	l = "!git log --graph --pretty='tformat:%C(yellow)%h{%C(green)%ar{%C(bold blue)%an{%C(red)%d%C(reset) %s' $* | column -t -s '{' | less -FXRS"
	# Show commit log using graph notation
	lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
	# List commits showing changed files
	ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
	ra = log --graph --abbrev-commit --date=relative -20 --all --pretty='format:%C(yellow)%h%Creset -%C(red)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset'

	# See all the commits related to a file
	filelog = log -u
	fl = log -u

	# Easily ignore committed, but changed files that I don't want to commit
	assume = update-index --assume-unchanged
	assumed = "!git ls-files -v | grep ^h | cut -c 3-"
	assumeall = "!git st -s | awk {'print $2'} | xargs git assume"
	unassume = update-index --no-assume-unchanged
	unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"
	lol = log --graph --pretty=format:'%C(bold blue)%h%Creset %C(bold green)<%an>%Creset%Cgreen (%cr)%Creset%C(yellow)%d%Creset %s' --abbrev-commit --date=relative
[filter "lfs"]
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
	required = true
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "sourcetree"]
	cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
[commit]
	template = /Users/katrawalkar/.stCommitMsg
[mergetool]
	prompt = false
	keepbackup = false
[pull]
	rebase = true
[tig]
    vertical-split = false
    show-changes = true
[mergetool "bc3"]
	trustExitCode = true
[mz]
	crStartEdit = true
    crVersbose = true
[clean]
	requireForce = false
